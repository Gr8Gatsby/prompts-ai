!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver((t=>{for(const e of t)if("childList"===e.type)for(const t of e.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&n(t)})).observe(document,{childList:!0,subtree:!0})}function n(t){if(t.ep)return;t.ep=!0;const n=function(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?n.credentials="include":"anonymous"===t.crossOrigin?n.credentials="omit":n.credentials="same-origin",n}(t);fetch(t.href,n)}}();class t{static injectButtonStyles(t){const n=document.createElement("style");n.textContent="\n      /* Modern Button Styles */\n      .btn {\n        height: 44px;\n        padding: 0 24px;\n        border-radius: 12px;\n        font-size: var(--font-size-md);\n        font-weight: var(--font-weight-semibold);\n        cursor: pointer;\n        transition: all 0.2s ease;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        gap: 8px;\n        white-space: nowrap;\n        text-decoration: none;\n        min-width: 120px;\n        letter-spacing: 0.01em;\n        border: none;\n        position: relative;\n        overflow: hidden;\n      }\n\n      .btn-primary {\n        background: var(--button-primary-bg);\n        color: white;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);\n      }\n\n      .btn-primary:hover:not(:disabled) {\n        background: var(--button-primary-hover);\n        transform: translateY(-1px);\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);\n      }\n\n      .btn-primary:active:not(:disabled) {\n        background: var(--button-primary-active);\n        transform: translateY(0);\n        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n      }\n\n      .btn-secondary {\n        background: var(--button-secondary-bg);\n        color: var(--text-primary);\n        border: 2px solid var(--button-secondary-border);\n      }\n\n      .btn-secondary:hover:not(:disabled) {\n        background: var(--button-secondary-hover);\n        border-color: var(--button-secondary-border-hover);\n        transform: translateY(-1px);\n      }\n\n      .btn-secondary:active:not(:disabled) {\n        transform: translateY(0);\n        background: var(--button-secondary-bg);\n      }\n\n      .btn-small {\n        height: 36px;\n        padding: 0 16px;\n        min-width: 80px;\n        font-size: var(--font-size-sm);\n      }\n\n      .btn-large {\n        height: 48px;\n        padding: 0 32px;\n        min-width: 140px;\n        font-size: var(--font-size-lg);\n      }\n\n      .btn:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n        transform: none !important;\n        box-shadow: none !important;\n      }\n    ",t.appendChild(n)}static injectCardStyles(t){const n=document.createElement("style");n.textContent="\n      /* Modern Card Styles */\n      .card {\n        background: #1a1a1a;\n        border-radius: 12px;\n        padding: 20px;\n        transition: all 0.2s ease;\n        border: 1px solid rgba(255, 255, 255, 0.1);\n      }\n      \n      .card-hover:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n        border-color: rgba(255, 255, 255, 0.15);\n      }\n    ",t.appendChild(n)}static injectThemeVariables(t){const n=document.createElement("style");n.textContent="\n      :host {\n        /* Typography */\n        --font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        --font-size-base: 16px;\n        --font-size-xs: 12px;\n        --font-size-sm: 14px;\n        --font-size-md: 16px;\n        --font-size-lg: 20px;\n        --font-size-xl: 24px;\n        --font-weight-normal: 400;\n        --font-weight-medium: 500;\n        --font-weight-semibold: 600;\n        --font-weight-bold: 700;\n        --line-height-tight: 1.2;\n        --line-height-normal: 1.5;\n        --line-height-relaxed: 1.75;\n      }\n\n      [data-font-size=\"small\"] {\n        --font-size-base: 14px;\n        --font-size-xs: 10px;\n        --font-size-sm: 12px;\n        --font-size-md: 14px;\n        --font-size-lg: 18px;\n        --font-size-xl: 22px;\n      }\n\n      [data-font-size=\"medium\"] {\n        --font-size-base: 16px;\n        --font-size-xs: 12px;\n        --font-size-sm: 14px;\n        --font-size-md: 16px;\n        --font-size-lg: 20px;\n        --font-size-xl: 24px;\n      }\n\n      [data-font-size=\"large\"] {\n        --font-size-base: 18px;\n        --font-size-xs: 14px;\n        --font-size-sm: 16px;\n        --font-size-md: 18px;\n        --font-size-lg: 22px;\n        --font-size-xl: 26px;\n      }\n    ",t.appendChild(n)}}class n extends HTMLElement{constructor(){super()}attachShadowAndInjectStyles(){const n=this.attachShadow({mode:"open"});return t.injectThemeVariables(n),n}}customElements.define("app-navigation",class extends n{constructor(){super(),this.attachShadow({mode:"open"}),this.isMobile=!1,this.isMenuOpen=!1,this.currentPath=window.location.pathname||"/prompts",this.render(),this.setupEventListeners(),requestAnimationFrame((()=>this.updateActiveLink()))}render(){this.shadowRoot.innerHTML='\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n          background: var(--secondary-background);\n          border-bottom: 1px solid var(--border-color);\n        }\n\n        nav {\n          display: flex;\n          align-items: center;\n          height: var(--header-height);\n          padding: 0 var(--spacing-lg);\n          max-width: var(--container-max-width);\n          margin: 0 auto;\n          gap: var(--spacing-md);\n        }\n\n        a {\n          display: flex;\n          align-items: center;\n          gap: var(--spacing-sm);\n          padding: var(--spacing-sm) var(--spacing-md);\n          color: var(--text-secondary);\n          text-decoration: none;\n          border-radius: var(--border-radius-md);\n          font-size: var(--font-size-sm);\n          font-weight: var(--font-weight-medium);\n          transition: color var(--transition-normal), background-color var(--transition-normal);\n        }\n\n        a:hover {\n          color: var(--text-primary);\n          background-color: var(--hover-overlay);\n        }\n\n        a[aria-current="page"] {\n          color: var(--text-primary);\n          background-color: var(--active-overlay);\n        }\n\n        .icon {\n          width: 24px;\n          height: 24px;\n          display: inline-block;\n          background-size: contain;\n          background-repeat: no-repeat;\n        }\n\n        .icon-prompts {\n          background-image: url(\'../icons/Feather Icons/home.svg\');\n        }\n\n        .icon-analytics {\n          background-image: url(\'../icons/Feather Icons/bar-chart-2.svg\');\n        }\n\n        .icon-testing {\n          background-image: url(\'../icons/Feather Icons/activity.svg\');\n        }\n\n        .icon-settings {\n          background-image: url(\'../icons/Feather Icons/settings.svg\');\n        }\n\n        .menu-button {\n          display: none;\n          padding: var(--spacing-sm);\n          background: none;\n          border: none;\n          color: var(--text-primary);\n          cursor: pointer;\n        }\n\n        @media (max-width: 767px) {\n          nav {\n            padding: 0 var(--spacing-md);\n          }\n\n          .menu-button {\n            display: block;\n          }\n\n          nav {\n            position: fixed;\n            top: var(--header-height);\n            left: 0;\n            right: 0;\n            bottom: 0;\n            flex-direction: column;\n            align-items: stretch;\n            background: var(--secondary-background);\n            padding: var(--spacing-md);\n            transform: translateX(-100%);\n            transition: transform var(--transition-slow);\n            z-index: var(--z-index-fixed);\n          }\n\n          nav.visible {\n            transform: translateX(0);\n          }\n\n          a {\n            padding: var(--spacing-md);\n            border-radius: var(--border-radius-sm);\n          }\n        }\n      </style>\n\n      <button class="menu-button" aria-label="Toggle menu">\n        <svg viewBox="0 0 24 24">\n          <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/>\n        </svg>\n      </button>\n\n      <nav>\n        <a href="/prompts" aria-current="page">\n          <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file-text">\n            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>\n            <polyline points="14 2 14 8 20 8"></polyline>\n            <line x1="16" y1="13" x2="8" y2="13"></line>\n            <line x1="16" y1="17" x2="8" y2="17"></line>\n            <polyline points="10 9 9 9 8 9"></polyline>\n          </svg>\n          Prompts\n        </a>\n        <a href="/analytics">\n          <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-bar-chart-2">\n            <line x1="18" y1="20" x2="18" y2="10"></line>\n            <line x1="12" y1="20" x2="12" y2="4"></line>\n            <line x1="6" y1="20" x2="6" y2="14"></line>\n          </svg>\n          Analytics\n        </a>\n        <a href="/testing">\n          <svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-activity">\n            <polyline points="22 12 18 12 15 21 9 3 6 12 2 12"></polyline>\n          </svg>\n          Testing\n        </a>\n        <a href="/settings">\n          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-settings">\n            <circle cx="12" cy="12" r="3"></circle>\n            <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>\n          </svg>\n          Settings\n        </a>\n      </nav>\n    '}setupEventListeners(){const t=window.matchMedia("(max-width: 767px)");this.handleMediaQueryChange(t),t.addEventListener?t.addEventListener("change",(t=>this.handleMediaQueryChange(t))):t.addListener&&t.addListener((t=>this.handleMediaQueryChange(t)));this.shadowRoot.querySelector(".menu-button").addEventListener("click",(()=>{this.isMenuOpen=!this.isMenuOpen,this.updateMenuVisibility()}));this.shadowRoot.querySelectorAll("nav a").forEach((t=>{t.addEventListener("click",(n=>{n.preventDefault();const e=t.getAttribute("href");window.history.pushState({},"",e),this.updateActiveLink(),window.dispatchEvent(new CustomEvent("route-changed",{detail:{path:e}})),this.isMobile&&(this.isMenuOpen=!1,this.updateMenuVisibility())}))})),window.addEventListener("popstate",(()=>{this.updateActiveLink(),window.dispatchEvent(new CustomEvent("route-changed",{detail:{path:window.location.pathname}}))})),document.addEventListener("click",(t=>{this.isMenuOpen&&!this.shadowRoot.contains(t.target)&&(this.isMenuOpen=!1,this.updateMenuVisibility())}))}handleMediaQueryChange(t){this.isMobile=t.matches,this.isMobile||(this.isMenuOpen=!1),this.updateMenuVisibility()}updateMenuVisibility(){this.shadowRoot.querySelector("nav").classList.toggle("visible",this.isMenuOpen)}updateActiveLink(){const t=this.shadowRoot.querySelectorAll("nav a"),n=window.location.pathname||"/prompts";t.forEach((t=>{const e=t.getAttribute("href");n===e?t.setAttribute("aria-current","page"):t.setAttribute("aria-current","false")}))}});class e{constructor(){this.DB_NAME="promptsDB",this.DB_VERSION=1,this.db=null,this.initPromise=null,this.isTest=!1,this.isTest&&(this.memoryStorage={prompts:new Map,files:new Map,examples:new Map,nextId:1})}logError(t,n){this.isTest||console.error(t,n)}async initializeDB(){return this.isTest?(this.initPromise||(this.initPromise=new Promise(((t,n)=>{try{const e=indexedDB.open(this.DB_NAME,this.DB_VERSION);e.onerror=t=>{n(t.target.error)},e.onupgradeneeded=t=>{const n=t.target.result;if(!n.objectStoreNames.contains("prompts")){const t=n.createObjectStore("prompts",{keyPath:"id",autoIncrement:!0});t.createIndex("title","title",{unique:!1}),t.createIndex("tags","tags",{unique:!1,multiEntry:!0}),t.createIndex("createdAt","createdAt",{unique:!1})}if(!n.objectStoreNames.contains("files")){const t=n.createObjectStore("files",{keyPath:"id",autoIncrement:!0});t.createIndex("promptId","promptId",{unique:!1}),t.createIndex("type","type",{unique:!1})}if(!n.objectStoreNames.contains("examples")){n.createObjectStore("examples",{keyPath:"id",autoIncrement:!0}).createIndex("promptId","promptId",{unique:!1})}},e.onsuccess=n=>{this.db=n.target.result,t()}}catch(e){n(e)}}))),this.initPromise):(this.initPromise||(this.initPromise=new Promise(((t,n)=>{try{this.db&&(this.db.close(),this.db=null);const e=indexedDB.open(this.DB_NAME,this.DB_VERSION);e.onerror=t=>{this.logError("Database error:",t.target.error),n(t.target.error)},e.onupgradeneeded=t=>{const n=t.target.result;if(!n.objectStoreNames.contains("prompts")){const t=n.createObjectStore("prompts",{keyPath:"id",autoIncrement:!0});t.createIndex("title","title",{unique:!1}),t.createIndex("tags","tags",{unique:!1,multiEntry:!0}),t.createIndex("createdAt","createdAt",{unique:!1})}if(!n.objectStoreNames.contains("files")){const t=n.createObjectStore("files",{keyPath:"id",autoIncrement:!0});t.createIndex("promptId","promptId",{unique:!1}),t.createIndex("type","type",{unique:!1})}if(!n.objectStoreNames.contains("examples")){n.createObjectStore("examples",{keyPath:"id",autoIncrement:!0}).createIndex("promptId","promptId",{unique:!1})}},e.onsuccess=n=>{this.db=n.target.result,t()}}catch(e){this.logError("Failed to initialize database:",e),n(e)}}))),this.initPromise)}async createPrompt(t){if(this.isTest){const n=this.memoryStorage.nextId++,e={...t,id:n,createdAt:new Date,updatedAt:new Date};if(this.memoryStorage.prompts.set(n,e),t.files?.length){e.files=[];for(const r of t.files){const t=this.memoryStorage.nextId++,o={id:t,promptId:n,name:r.name,type:r.type,data:r,createdAt:new Date};this.memoryStorage.files.set(t,o),e.files.push(t)}}if(t.examples?.length){e.examples=[];for(const r of t.examples){const t=this.memoryStorage.nextId++,o={id:t,promptId:n,...r,createdAt:new Date};this.memoryStorage.examples.set(t,o),e.examples.push(t)}}return n}await this.ensureDB();const n=this.db.transaction(["prompts","files","examples"],"readwrite"),e=n.objectStore("prompts"),r=n.objectStore("files"),o=n.objectStore("examples");try{const n={...t,createdAt:new Date,updatedAt:new Date,files:[],examples:[]};delete n.id;const i=await new Promise(((t,r)=>{const o=e.add(n);o.onsuccess=()=>t(o.result),o.onerror=()=>r(o.error)}));if(t.files?.length)for(const e of t.files){const t={promptId:i,name:e.name,type:e.type,data:e,createdAt:new Date};await new Promise(((n,e)=>{const o=r.add(t);o.onsuccess=()=>n(o.result),o.onerror=()=>e(o.error)}))}if(t.examples?.length)for(const e of t.examples){const t={promptId:i,...e,createdAt:new Date};await new Promise(((n,e)=>{const r=o.add(t);r.onsuccess=()=>n(r.result),r.onerror=()=>e(r.error)}))}return i}catch(i){throw this.logError("Failed to create prompt:",i),n.abort(),i}}async getPrompt(t){if(this.isTest){const n=this.memoryStorage.prompts.get(t);if(!n)throw new Error("Prompt not found");const e=Array.from(this.memoryStorage.files.values()).filter((n=>n.promptId===t)),r=Array.from(this.memoryStorage.examples.values()).filter((n=>n.promptId===t));return{...n,files:e,examples:r}}await this.ensureDB();const n=this.db.transaction(["prompts","files","examples"],"readonly"),e=n.objectStore("prompts"),r=n.objectStore("files"),o=n.objectStore("examples");try{const n=await new Promise(((n,r)=>{const o=e.get(t);o.onsuccess=()=>n(o.result),o.onerror=()=>r(o.error)}));if(!n)throw new Error("Prompt not found");const i=r.index("promptId");n.files=await new Promise(((n,e)=>{const r=i.getAll(t);r.onsuccess=()=>n(r.result),r.onerror=()=>e(r.error)}));const a=o.index("promptId");return n.examples=await new Promise(((n,e)=>{const r=a.getAll(t);r.onsuccess=()=>n(r.result),r.onerror=()=>e(r.error)})),n}catch(i){throw this.logError("Failed to get prompt:",i),i}}async updatePrompt(t,n){if(this.isTest){const e=this.memoryStorage.prompts.get(t);if(!e)throw new Error("Prompt not found");return void this.memoryStorage.prompts.set(t,{...e,...n,updatedAt:new Date})}await this.ensureDB();const e=this.db.transaction(["prompts"],"readwrite"),r=e.objectStore("prompts");try{const e=await new Promise(((n,e)=>{const o=r.get(t);o.onsuccess=()=>n(o.result),o.onerror=()=>e(o.error)}));if(!e)throw new Error("Prompt not found");const o={...e,...n,updatedAt:new Date};await new Promise(((t,n)=>{const e=r.put(o);e.onsuccess=()=>t(),e.onerror=()=>n(e.error)}))}catch(o){throw this.logError("Failed to update prompt:",o),e.abort(),o}}async deletePrompt(t){if(this.isTest){this.memoryStorage.prompts.delete(t);for(const[n,e]of this.memoryStorage.files.entries())e.promptId===t&&this.memoryStorage.files.delete(n);for(const[n,e]of this.memoryStorage.examples.entries())e.promptId===t&&this.memoryStorage.examples.delete(n);return}await this.ensureDB();const n=this.db.transaction(["prompts","files","examples"],"readwrite"),e=n.objectStore("prompts"),r=n.objectStore("files"),o=n.objectStore("examples");try{await new Promise(((n,r)=>{const o=e.delete(Number(t));o.onsuccess=()=>n(),o.onerror=()=>r(o.error)}));const i=r.index("promptId").getAllKeys(t),a=await new Promise(((t,n)=>{i.onsuccess=()=>t(i.result),i.onerror=()=>n(i.error)}));for(const t of a)await new Promise(((n,e)=>{const o=r.delete(t);o.onsuccess=()=>n(),o.onerror=()=>e(o.error)}));const s=o.index("promptId").getAllKeys(t),d=await new Promise(((t,n)=>{s.onsuccess=()=>t(s.result),s.onerror=()=>n(s.error)}));for(const t of d)await new Promise(((n,e)=>{const r=o.delete(t);r.onsuccess=()=>n(),r.onerror=()=>e(r.error)}));await new Promise(((t,e)=>{n.oncomplete=()=>t(),n.onerror=()=>e(n.error)}))}catch(i){throw this.logError("Failed to delete prompt:",i),i}}async searchPrompts({query:t,tags:n}={}){if(this.isTest){return Array.from(this.memoryStorage.prompts.values()).filter((e=>{const r=!t||e.title.toLowerCase().includes(t.toLowerCase())||e.content.toLowerCase().includes(t.toLowerCase()),o=!n?.length||n.every((t=>e.tags.includes(t)));return r&&o}))}await this.ensureDB();const e=this.db.transaction(["prompts"],"readonly").objectStore("prompts");try{return(await new Promise(((t,n)=>{const r=e.getAll();r.onsuccess=()=>t(r.result),r.onerror=()=>n(r.error)}))).filter((e=>{const r=!t||e.title.toLowerCase().includes(t.toLowerCase())||e.content.toLowerCase().includes(t.toLowerCase()),o=!n?.length||n.every((t=>e.tags.includes(t)));return r&&o}))}catch(r){throw this.logError("Failed to search prompts:",r),r}}async getAllPrompts(){if(this.isTest)return Array.from(this.memoryStorage.prompts.values());await this.ensureDB();const t=this.db.transaction(["prompts"],"readonly").objectStore("prompts");try{return await new Promise(((n,e)=>{const r=t.getAll();r.onsuccess=()=>n(r.result),r.onerror=()=>e(r.error)}))}catch(n){throw this.logError("Failed to get all prompts:",n),n}}async ensureDB(){this.db||await this.initializeDB()}}customElements.define("prompt-list",class extends n{constructor(){super(),this.attachShadowAndInjectStyles(),this.prompts=[],this.storageService=new e,this.promptToDelete=null}connectedCallback(){this.render(),this.loadPrompts(),this.setupEventListeners(),this.boundPromptSavedHandler=()=>this.loadPrompts(),window.addEventListener("prompt-saved",this.boundPromptSavedHandler),document.addEventListener("prompt-saved",this.boundPromptSavedHandler)}disconnectedCallback(){window.removeEventListener("prompt-saved",this.boundPromptSavedHandler),document.removeEventListener("prompt-saved",this.boundPromptSavedHandler)}render(){this.shadowRoot.innerHTML=`\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n          height: 100%;\n        }\n\n        .prompt-list {\n          max-width: var(--content-width);\n          margin: 0 auto;\n          padding: 0 var(--spacing-md);\n          width: 100%;\n          height: 100%;\n          box-sizing: border-box;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .header {\n          display: flex;\n          justify-content: flex-end;\n          margin-bottom: var(--spacing-lg);\n          flex-shrink: 0;\n        }\n\n        .create-button {\n          background: var(--button-primary-bg);\n          color: var(--text-primary);\n          height: 44px;\n          padding: 0 24px;\n          border-radius: 12px;\n          font-size: var(--font-size-md);\n          font-weight: var(--font-weight-semibold);\n          cursor: pointer;\n          transition: all 0.2s ease;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n          white-space: nowrap;\n          text-decoration: none;\n          min-width: 120px;\n          letter-spacing: 0.01em;\n          border: none;\n          position: relative;\n          overflow: hidden;\n          box-shadow: var(--shadow-sm);\n        }\n\n        .create-button:hover {\n          background: var(--button-primary-hover);\n          transform: translateY(-1px);\n          box-shadow: var(--shadow-md);\n        }\n\n        .create-button:active {\n          background: var(--button-primary-active);\n          transform: translateY(0);\n          box-shadow: var(--shadow-sm);\n        }\n\n        .prompts {\n          display: grid;\n          gap: var(--spacing-lg);\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n          grid-auto-rows: 220px;\n          width: 100%;\n          overflow-y: auto;\n          flex: 1;\n          min-height: 0;\n          padding-bottom: var(--spacing-lg);\n        }\n\n        .prompt-card {\n          background: var(--card-background);\n          border-radius: var(--card-border-radius);\n          padding: var(--spacing-lg);\n          cursor: pointer;\n          transition: all 0.2s ease;\n          border: 1px solid var(--border-color);\n          display: flex;\n          flex-direction: column;\n          position: relative;\n          box-sizing: border-box;\n          height: 100%;\n        }\n        \n        .prompt-card:hover {\n          transform: translateY(-2px);\n          box-shadow: var(--shadow-lg);\n          border-color: var(--border-color);\n        }\n\n        .prompt-card-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          margin-bottom: var(--spacing-md);\n          flex-shrink: 0;\n        }\n        \n        .prompt-title {\n          font-size: var(--font-size-lg);\n          font-weight: var(--font-weight-semibold);\n          color: var(--text-primary);\n          flex: 1;\n          margin-right: var(--spacing-sm);\n        }\n\n        .delete-button {\n          background: transparent;\n          border: none;\n          color: var(--text-tertiary);\n          cursor: pointer;\n          padding: var(--spacing-xs);\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: all 0.2s ease;\n        }\n\n        .delete-button:hover {\n          color: var(--accent-error);\n          background: var(--hover-overlay);\n        }\n        \n        .prompt-preview {\n          font-size: var(--font-size-sm);\n          color: var(--text-secondary);\n          line-height: var(--line-height-normal);\n          flex: 1;\n          overflow: hidden;\n          display: -webkit-box;\n          -webkit-line-clamp: 4;\n          -webkit-box-orient: vertical;\n          margin-bottom: var(--spacing-md);\n        }\n        \n        .prompt-tags {\n          display: flex;\n          flex-wrap: wrap;\n          gap: var(--spacing-xs);\n          margin-top: auto;\n          flex-shrink: 0;\n        }\n        \n        .tag {\n          background: var(--button-secondary-bg);\n          color: var(--text-primary);\n          padding: var(--spacing-xs) var(--spacing-sm);\n          border-radius: var(--border-radius-sm);\n          font-size: var(--font-size-xs);\n          font-weight: var(--font-weight-medium);\n        }\n\n        /* Modal styles */\n        .modal-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.5);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: var(--z-index-modal);\n          opacity: 0;\n          visibility: hidden;\n          transition: all 0.2s ease;\n        }\n\n        .modal-overlay.visible {\n          opacity: 1;\n          visibility: visible;\n        }\n\n        .modal {\n          background: var(--card-background);\n          border-radius: var(--card-border-radius);\n          padding: var(--spacing-lg);\n          width: 90%;\n          max-width: 400px;\n          transform: translateY(20px);\n          transition: all 0.2s ease;\n        }\n\n        .modal-overlay.visible .modal {\n          transform: translateY(0);\n        }\n\n        .modal-title {\n          font-size: var(--font-size-lg);\n          font-weight: var(--font-weight-semibold);\n          margin-bottom: var(--spacing-md);\n          color: var(--text-primary);\n        }\n\n        .modal-content {\n          font-size: var(--font-size-md);\n          color: var(--text-secondary);\n          margin-bottom: var(--spacing-lg);\n          line-height: var(--line-height-normal);\n        }\n\n        .modal-actions {\n          display: flex;\n          justify-content: flex-end;\n          gap: var(--spacing-md);\n        }\n\n        .modal-cancel {\n          background: var(--button-secondary-bg);\n          color: var(--text-primary);\n          border: 1px solid var(--button-secondary-border);\n        }\n\n        .modal-confirm {\n          background: var(--accent-error);\n          color: white;\n        }\n\n        .modal-cancel,\n        .modal-confirm {\n          padding: var(--spacing-sm) var(--spacing-lg);\n          border-radius: var(--border-radius-md);\n          font-size: var(--font-size-sm);\n          font-weight: var(--font-weight-semibold);\n          cursor: pointer;\n          transition: all 0.2s ease;\n        }\n\n        .modal-cancel:hover {\n          background: var(--button-secondary-hover);\n        }\n\n        .modal-confirm:hover {\n          opacity: 0.9;\n        }\n\n        @media (max-width: 767px) {\n          .header {\n            margin-bottom: var(--spacing-md);\n          }\n          \n          .prompt-list {\n            padding: 0 var(--spacing-sm);\n          }\n          \n          .prompts {\n            gap: var(--spacing-md);\n            grid-template-columns: 1fr;\n          }\n\n          .prompt-card {\n            min-height: 180px;\n          }\n        }\n\n        .error-message {\n          background: var(--accent-error);\n          color: white;\n          padding: var(--spacing-md);\n          border-radius: var(--border-radius-md);\n          margin-bottom: var(--spacing-lg);\n          text-align: center;\n        }\n      </style>\n\n      <div class="prompt-list">\n        ${null===this.prompts?this.renderError():""}\n        <div class="header">\n          <button class="create-button">Create New Prompt</button>\n        </div>\n        <div class="prompts">\n          ${this.renderPrompts()}\n        </div>\n      </div>\n\n      <div class="modal-overlay">\n        <div class="modal">\n          <div class="modal-title">Delete Prompt</div>\n          <div class="modal-content">\n            Are you sure you want to delete this prompt? This action cannot be undone.\n          </div>\n          <div class="modal-actions">\n            <button class="modal-cancel">Cancel</button>\n            <button class="modal-confirm">Delete</button>\n          </div>\n        </div>\n      </div>\n    `}renderPrompts(){return null===this.prompts?"":0===this.prompts.length?this.renderEmptyState():this.prompts.map((t=>this.renderPromptCard(t))).join("")}renderError(){return'\n      <div class="error-message">\n        Failed to load prompts. Please try again later.\n      </div>\n    '}renderEmptyState(){return'\n      <div style="grid-column: 1 / -1; text-align: center; padding: var(--spacing-xl); color: var(--text-tertiary);">\n        <p>No prompts yet. Click "Create New Prompt" to get started.</p>\n      </div>\n    '}renderPromptCard(t){const n=t.attachments?t.attachments.length:0,e=t.attachments?t.attachments.map((t=>`\n      <div class="attachment-item">\n        <span class="file-icon">${this.getFileIcon(t.type)}</span>\n        <span class="file-name">${this.escapeHtml(t.name)}</span>\n      </div>\n    `)).join(""):"";return`\n      <div class="prompt-card" data-id="${t.id}">\n        <div class="prompt-card-header">\n          <div class="prompt-title">${this.escapeHtml(t.title)}</div>\n          <div class="attachment-icon" data-id="${t.id}">\n            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-paperclip"><path d="M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"></path></svg>\n            <span class="badge">${n}</span>\n          </div>\n          <button class="delete-button" data-id="${t.id}">\n            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2">\n              <polyline points="3 6 5 6 21 6"></polyline>\n              <path d="M19 6l-1 14a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2L5 6m5 0V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2"></path>\n              <line x1="10" y1="11" x2="10" y2="17"></line>\n              <line x1="14" y1="11" x2="14" y2="17"></line>\n            </svg>\n          </button>\n        </div>\n        <div class="prompt-preview">${this.escapeHtml(t.content)}</div>\n        <div class="prompt-tags">\n          ${t.tags.map((t=>`<span class="tag">${this.escapeHtml(t)}</span>`)).join("")}\n        </div>\n        <div class="attachments-dropdown">\n          ${e}\n        </div>\n      </div>\n    `}escapeHtml(t){return t?t.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;"):""}showDeleteModal(t){this.promptToDelete=t;this.shadowRoot.querySelector(".modal-overlay").classList.add("visible")}hideDeleteModal(){this.promptToDelete=null;this.shadowRoot.querySelector(".modal-overlay").classList.remove("visible")}async deletePrompt(t){try{const n=Number(t);if(isNaN(n))throw new Error("Invalid prompt ID");await this.storageService.deletePrompt(n),await this.loadPrompts(),this.dispatchEvent(new CustomEvent("prompt-deleted",{detail:{id:n},bubbles:!0,composed:!0}))}catch(n){console.error("Failed to delete prompt:",n);const t=this.shadowRoot.querySelector(".error-message");t&&(t.textContent="Failed to delete prompt. Please try again.",t.style.display="block",setTimeout((()=>{t.style.display="none"}),3e3))}}setupEventListeners(){this.shadowRoot.querySelector(".create-button").addEventListener("click",(()=>{window.history.pushState({},"","/editor"),window.dispatchEvent(new CustomEvent("route-changed",{detail:{path:"/editor"}}))})),this.shadowRoot.querySelectorAll(".prompt-card").forEach((t=>{const n=t.querySelector(".delete-button"),e=t.querySelector(".attachment-icon"),r=t.querySelector(".attachments-dropdown");n?.addEventListener("click",(t=>{t.stopPropagation();const n=t.currentTarget.dataset.id;this.showDeleteModal(n)})),e?.addEventListener("click",(t=>{t.stopPropagation(),r.classList.toggle("visible")})),t.addEventListener("click",(t=>{if(t.target.closest(".delete-button")||t.target.closest(".attachment-icon"))return;const n=t.currentTarget.dataset.id;window.history.pushState({},"",`/editor?id=${n}`),window.dispatchEvent(new CustomEvent("route-changed",{detail:{path:`/editor?id=${n}`}}))}))}));const t=this.shadowRoot.querySelector(".modal-overlay"),n=this.shadowRoot.querySelector(".modal-cancel"),e=this.shadowRoot.querySelector(".modal-confirm");t.addEventListener("click",(n=>{n.target===t&&this.hideDeleteModal()})),n.addEventListener("click",(()=>{this.hideDeleteModal()})),e.addEventListener("click",(async()=>{this.promptToDelete&&(await this.deletePrompt(this.promptToDelete),this.hideDeleteModal())}))}async loadPrompts(){try{this.prompts=await this.storageService.getAllPrompts(),this.render(),this.setupEventListeners()}catch(t){console.error("Failed to load prompts:",t),this.prompts=null,this.render()}}});customElements.define("file-upload",class extends n{constructor(){super(),this.attachShadow({mode:"open"}),this.files=[],this.render()}render(){this.shadowRoot.innerHTML=`\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n        }\n\n        .file-upload {\n          border: 1px solid var(--border-color);\n          border-radius: var(--border-radius-md);\n          padding: var(--spacing-md);\n          background: var(--input-background);\n          display: flex;\n          flex-direction: column;\n          gap: var(--spacing-md);\n        }\n\n        .file-item {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: var(--spacing-sm);\n          border: 1px solid var(--border-color);\n          border-radius: var(--border-radius-sm);\n          background: var(--card-background);\n        }\n\n        .file-item input {\n          border: none;\n          background: none;\n          color: var(--text-primary);\n          font-size: var(--font-size-sm);\n          flex: 1;\n          margin-right: var(--spacing-sm);\n        }\n\n        .file-item button {\n          background: none;\n          border: none;\n          color: var(--accent-error);\n          cursor: pointer;\n        }\n\n        .file-item button:hover {\n          color: var(--text-primary);\n        }\n\n        .file-icon {\n          margin-right: var(--spacing-sm);\n        }\n\n        .upload-button {\n          background: var(--button-primary-bg);\n          color: var(--text-primary);\n          padding: var(--spacing-sm) var(--spacing-md);\n          border-radius: var(--border-radius-md);\n          cursor: pointer;\n          border: none;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .upload-button:hover {\n          background: var(--button-primary-hover);\n        }\n      </style>\n\n      <div class="file-upload">\n        <input type="file" id="file-input" multiple hidden />\n        <button class="upload-button" type="button">Upload Files</button>\n        <div class="file-list">\n          ${this.files.map((t=>this.renderFileItem(t))).join("")}\n        </div>\n      </div>\n    `,this.setupEventListeners()}renderFileItem(t){return`\n      <div class="file-item">\n        <span class="file-icon">${this.getFileIcon(t.type)}</span>\n        <input type="text" value="${t.name}" />\n        <button type="button" class="delete-button">\n          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2">\n            <polyline points="3 6 5 6 21 6"></polyline>\n            <path d="M19 6l-1 14a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2L5 6m5 0V4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2"></path>\n            <line x1="10" y1="11" x2="10" y2="17"></line>\n            <line x1="14" y1="11" x2="14" y2="17"></line>\n          </svg>\n        </button>\n      </div>\n    `}getFileIcon(t){const n=t.split("/").pop();return["jpg","jpeg","png","gif","bmp","svg","webp"].includes(n)?'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-image">\n        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>\n        <circle cx="8.5" cy="8.5" r="1.5"></circle>\n        <polyline points="21 15 16 10 5 21"></polyline>\n      </svg>':["txt","md","doc","docx","pdf","rtf"].includes(n)?'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file-text">\n        <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>\n        <polyline points="14 2 14 8 20 8"></polyline>\n        <line x1="16" y1="13" x2="8" y2="13"></line>\n        <line x1="16" y1="17" x2="8" y2="17"></line>\n        <polyline points="10 9 9 9 8 9"></polyline>\n      </svg>':["mp4","avi","mov","mkv","webm"].includes(n)?'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-video">\n        <polygon points="23 7 16 12 23 17 23 7"></polygon>\n        <rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>\n      </svg>':["mp3","wav","aac","flac","ogg"].includes(n)?'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-music">\n        <path d="M9 18V5l12-2v13"></path>\n        <circle cx="6" cy="18" r="3"></circle>\n        <circle cx="18" cy="16" r="3"></circle>\n      </svg>':'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-file">\n      <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>\n      <polyline points="14 2 14 8 20 8"></polyline>\n    </svg>'}setupEventListeners(){const t=this.shadowRoot.querySelector("#file-input"),n=this.shadowRoot.querySelector(".upload-button"),e=this.shadowRoot.querySelector(".file-list"),r=this.shadowRoot.querySelector(".modal-overlay"),o=this.shadowRoot.querySelector(".modal-cancel"),i=this.shadowRoot.querySelector(".modal-confirm");n&&n.addEventListener("click",(()=>t?.click())),t&&t.addEventListener("change",(t=>{const n=Array.from(t.target.files);this.files=[...this.files,...n],this.render()})),e&&e.addEventListener("click",(t=>{if(t.target.closest(".delete-button")){const n=Array.from(e.children).indexOf(t.target.closest(".file-item"));-1!==n&&this.showDeleteModal(n)}})),r&&r.addEventListener("click",(t=>{t.target===r&&this.hideDeleteModal()})),o&&o.addEventListener("click",(()=>{this.hideDeleteModal()})),i&&i.addEventListener("click",(()=>{null!==this.fileToDelete&&(this.files.splice(this.fileToDelete,1),this.fileToDelete=null,this.render(),this.hideDeleteModal())}))}showDeleteModal(t){this.fileToDelete=t;this.shadowRoot.querySelector(".modal-overlay").classList.add("visible")}hideDeleteModal(){this.fileToDelete=null;this.shadowRoot.querySelector(".modal-overlay").classList.remove("visible")}});customElements.define("prompt-editor",class extends n{constructor(){super(),this.attachShadowAndInjectStyles(),this.prompt={title:"",content:"",tags:[],files:[]},this.originalPrompt=null,this.saveTimeout=null,this.storageService=new e}connectedCallback(){this.render(),this.setupEventListeners();const t=this.getAttribute("prompt-id");t&&this.loadPrompt(t)}async loadPrompt(t){try{const n=await this.storageService.getPrompt(t);this.prompt={...n},this.originalPrompt={...n},this.render(),this.setupEventListeners()}catch(n){console.error("Failed to load prompt:",n),this.dispatchEvent(new CustomEvent("error",{detail:{message:"Failed to load prompt"},bubbles:!0,composed:!0}))}}validateForm(){const t=this.shadowRoot?.querySelector("#title"),n=this.shadowRoot?.querySelector("#content"),e=this.shadowRoot?.querySelector(".save-button"),r=this.shadowRoot?.querySelector("#title-error"),o=this.shadowRoot?.querySelector("#content-error");if(!(t&&n&&e&&r&&o))return!1;let i=!0;return t.value.trim()?(t.classList.remove("invalid"),r.classList.remove("visible")):(i=!1,t.classList.add("invalid"),r.classList.add("visible")),n.value.trim()?(n.classList.remove("invalid"),o.classList.remove("visible")):(i=!1,n.classList.add("invalid"),o.classList.add("visible")),e.disabled=!i,i}addTag(t){const n=t.trim();return!(!n||this.prompt.tags.includes(n))&&(this.prompt.tags=[...this.prompt.tags,n],this.updateTags(),!0)}removeTag(t){this.prompt.tags=this.prompt.tags.filter((n=>n!==t)),this.updateTags()}updateTags(){const t=this.shadowRoot.querySelector(".tags-container");if(!t)return;t.innerHTML=this.renderTags();this.shadowRoot.querySelectorAll(".tag-remove").forEach((t=>{t.addEventListener("click",(()=>{const n=t.closest(".tag");if(n){const t=n.textContent.replace("×","").trim();this.removeTag(t)}}))}));const n=this.shadowRoot.querySelector(".tag-input");n&&(n.value="",n.focus())}renderTags(){return this.prompt.tags.map((t=>`\n      <span class="tag">\n        ${this.escapeHtml(t)}\n        <button class="tag-remove" type="button">×</button>\n      </span>\n    `)).join("")}setupEventListeners(){const t=this.shadowRoot.querySelector("#prompt-form"),n=this.shadowRoot.querySelector("#title"),e=this.shadowRoot.querySelector("#content"),r=this.shadowRoot.querySelector(".tag-input");this.shadowRoot.querySelector(".save-button");const o=this.shadowRoot.querySelector(".cancel-button");t.addEventListener("submit",(async t=>{if(t.preventDefault(),this.validateForm())try{if(this.prompt={...this.prompt,title:n.value.trim(),content:e.value.trim(),tags:this.prompt.tags},this.prompt.id)await this.storageService.savePrompt(this.prompt);else{const t=await this.storageService.createPrompt(this.prompt);this.prompt.id=t}this.showSaveConfirmation();const t=new CustomEvent("prompt-saved",{detail:{id:this.prompt.id},bubbles:!0,composed:!0});this.dispatchEvent(t),setTimeout((()=>{window.history.pushState({},"","/prompts"),window.dispatchEvent(new CustomEvent("route-changed",{detail:{path:"/prompts"}}))}),1500)}catch(r){console.error("Failed to save prompt:",r)}})),n.addEventListener("input",(()=>this.validateForm())),e.addEventListener("input",(()=>this.validateForm())),r.addEventListener("keydown",(t=>{" "===t.key&&r.value.trim()&&(t.preventDefault(),this.addTag(r.value.trim()),r.value="")})),o.addEventListener("click",(()=>{this.prompt={title:"",content:"",tags:[]},this.render(),window.history.pushState({},"","/prompts"),window.dispatchEvent(new CustomEvent("route-changed",{detail:{path:"/prompts"}}))}))}showSaveConfirmation(){this.saveTimeout&&clearTimeout(this.saveTimeout);const t=this.shadowRoot?.querySelector(".save-button");t&&(t.textContent,t.textContent="Saved!",this.saveTimeout=setTimeout((()=>{t&&!t.disabled&&(t.textContent="Save Prompt")}),1500))}escapeHtml(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}render(){this.shadowRoot.innerHTML=`\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n          color: var(--text-primary);\n        }\n\n        .editor {\n          max-width: var(--content-width);\n          margin: 0 auto;\n          background: var(--card-background);\n          border: 1px solid var(--border-color);\n          border-radius: var(--card-border-radius);\n          padding: 32px;\n          box-sizing: border-box;\n        }\n\n        .form-group {\n          margin-bottom: 24px;\n          width: 100%;\n        }\n\n        form {\n          width: 100%;\n          max-width: 100%;\n        }\n\n        label {\n          display: block;\n          margin-bottom: 8px;\n          font-size: var(--font-size-sm);\n          font-weight: var(--font-weight-semibold);\n          color: var(--text-primary);\n          letter-spacing: 0.01em;\n        }\n\n        .input {\n          width: 100%;\n          background: var(--input-background);\n          color: var(--text-primary);\n          border: 1px solid var(--border-color);\n          border-radius: var(--input-border-radius);\n          padding: 12px;\n          font-size: var(--font-size-md);\n          transition: all 0.2s ease;\n          box-sizing: border-box;\n          display: block;\n        }\n\n        .input:focus {\n          border-color: var(--accent-primary);\n          box-shadow: var(--input-focus-ring);\n          outline: none;\n        }\n\n        .input::placeholder {\n          color: var(--text-tertiary);\n        }\n\n        .input.invalid {\n          border-color: var(--accent-error);\n          background: var(--error-alpha);\n        }\n\n        textarea.input {\n          height: 200px;\n          resize: vertical;\n          line-height: 1.5;\n          font-family: inherit;\n          margin: 0;\n          display: block;\n        }\n\n        .tags-input {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 8px;\n          padding: 12px;\n          border: 1px solid var(--border-color);\n          border-radius: var(--input-border-radius);\n          background: var(--input-background);\n          min-height: 48px;\n          align-items: flex-start;\n          width: 100%;\n          box-sizing: border-box;\n        }\n\n        .tags-input:focus-within {\n          border-color: var(--accent-primary);\n          box-shadow: var(--input-focus-ring);\n        }\n\n        .tag {\n          display: inline-flex;\n          align-items: center;\n          gap: 6px;\n          background: var(--button-secondary-bg);\n          color: var(--text-primary);\n          padding: 6px 10px;\n          border-radius: 6px;\n          font-size: 14px;\n          font-weight: var(--font-weight-medium);\n          border: 1px solid var(--button-secondary-border);\n          line-height: 1.5;\n        }\n\n        .tag button {\n          border: none;\n          background: none;\n          padding: 2px;\n          color: var(--text-secondary);\n          cursor: pointer;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          border-radius: 4px;\n          transition: all 0.2s ease;\n          font-size: 18px;\n          width: 20px;\n          height: 20px;\n          line-height: 1;\n        }\n\n        .tag button:hover {\n          color: var(--text-primary);\n          background: var(--hover-overlay);\n        }\n\n        .tag-input {\n          border: none;\n          padding: 6px;\n          background: none;\n          color: var(--text-primary);\n          font-size: 14px;\n          min-width: 60px;\n          flex: 1;\n          line-height: 1.5;\n          margin-top: 1px;\n        }\n\n        .tag-input:focus {\n          outline: none;\n        }\n\n        .tag-input::placeholder {\n          color: var(--text-tertiary);\n        }\n\n        .actions {\n          display: flex;\n          justify-content: flex-end;\n          gap: var(--spacing-md);\n          margin-top: var(--spacing-lg);\n        }\n\n        .save-button {\n          background: var(--button-primary-bg);\n          color: var(--text-primary);\n          height: 44px;\n          padding: 0 24px;\n          border-radius: 12px;\n          font-size: 16px;\n          font-weight: var(--font-weight-semibold);\n          cursor: pointer;\n          transition: all 0.2s ease;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n          white-space: nowrap;\n          text-decoration: none;\n          min-width: 120px;\n          letter-spacing: 0.01em;\n          border: none;\n          position: relative;\n          overflow: hidden;\n          box-shadow: var(--shadow-sm);\n        }\n\n        .save-button:hover:not(:disabled) {\n          background: var(--button-primary-hover);\n          transform: translateY(-1px);\n          box-shadow: var(--shadow-md);\n        }\n\n        .save-button:active:not(:disabled) {\n          background: var(--button-primary-active);\n          transform: translateY(0);\n          box-shadow: var(--shadow-sm);\n        }\n\n        .cancel-button {\n          background: var(--button-secondary-bg);\n          color: var(--text-primary);\n          border: 2px solid var(--button-secondary-border);\n          height: 44px;\n          padding: 0 24px;\n          border-radius: 12px;\n          font-size: 16px;\n          font-weight: var(--font-weight-semibold);\n          cursor: pointer;\n          transition: all 0.2s ease;\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n          white-space: nowrap;\n          text-decoration: none;\n          min-width: 120px;\n          letter-spacing: 0.01em;\n          position: relative;\n          overflow: hidden;\n        }\n\n        .cancel-button:hover:not(:disabled) {\n          background: var(--button-secondary-hover);\n          border-color: var(--button-secondary-border-hover);\n          transform: translateY(-1px);\n        }\n\n        .cancel-button:active:not(:disabled) {\n          transform: translateY(0);\n          background: var(--button-secondary-bg);\n        }\n\n        .save-button:disabled {\n          opacity: var(--disabled-opacity);\n          cursor: not-allowed;\n          transform: none !important;\n          box-shadow: none !important;\n        }\n\n        @media (max-width: 767px) {\n          .editor {\n            padding: var(--spacing-md);\n          }\n          \n          .actions {\n            margin-top: var(--spacing-md);\n            padding-top: var(--spacing-md);\n          }\n        }\n\n        .error-message {\n          display: none;\n          color: var(--accent-error);\n          font-size: 12px;\n          margin-top: 4px;\n        }\n\n        .error-message.visible {\n          display: block;\n        }\n\n        .input.invalid + .error-message {\n          display: block;\n        }\n      </style>\n\n      <div class="editor">\n        <form id="prompt-form">\n          <div class="form-group">\n            <label for="title">Title</label>\n            <input type="text" id="title" class="input" value="${this.escapeHtml(this.prompt.title)}" required>\n            <div id="title-error" class="error-message">Title is required</div>\n          </div>\n\n          <div class="form-group">\n            <label for="content">Content</label>\n            <textarea id="content" class="input" rows="6" required>${this.escapeHtml(this.prompt.content)}</textarea>\n            <div id="content-error" class="error-message">Content is required</div>\n          </div>\n\n          <div class="form-group">\n            <label>Tags</label>\n            <div class="tags-input">\n              <div class="tags-container">\n                ${this.renderTags()}\n              </div>\n              <input type="text" id="tag-input" name="tag-input" class="tag-input input" placeholder="Add tags...">\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label>Attachments</label>\n            <file-upload></file-upload>\n          </div>\n\n          <div class="actions">\n            <button type="button" class="btn btn-secondary cancel-button">Cancel</button>\n            <button type="submit" class="btn btn-primary save-button">Save Prompt</button>\n          </div>\n        </form>\n      </div>\n    `}});customElements.define("settings-panel",class extends n{constructor(){super(),this.attachShadowAndInjectStyles(),this.settings={darkMode:!0,notifications:!0,autoSave:!0,fontSize:"medium"},this.loadSettings()}connectedCallback(){this.render(),this.setupEventListeners()}loadSettings(){const t=localStorage.getItem("appSettings");t&&(this.settings={...this.settings,...JSON.parse(t)},this.applySettings())}applySettings(){document.documentElement.setAttribute("data-theme",this.settings.darkMode?"dark":"light"),document.documentElement.setAttribute("data-font-size",this.settings.fontSize)}getFontSizeValue(){return this.settings.fontSize}render(){this.shadowRoot.innerHTML=`\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n          color: var(--text-primary);\n        }\n\n        .settings {\n          max-width: var(--content-width);\n          margin: 0 auto;\n        }\n\n        .card {\n          background: var(--card-background);\n          border-radius: 12px;\n          padding: 24px;\n          margin-bottom: 24px;\n          border: 1px solid var(--border-color);\n        }\n\n        .card-title {\n          font-size: var(--font-size-lg);\n          font-weight: var(--font-weight-semibold);\n          margin-bottom: 24px;\n          color: var(--text-primary);\n          border-bottom: 1px solid var(--border-color);\n          padding-bottom: 12px;\n        }\n\n        .settings-group {\n          margin-bottom: 24px;\n        }\n\n        .setting-row {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 12px 0;\n          border-bottom: 1px solid var(--border-color);\n        }\n\n        .setting-label {\n          font-size: var(--font-size-md);\n          font-weight: var(--font-weight-medium);\n        }\n\n        .setting-description {\n          font-size: var(--font-size-sm);\n          color: var(--text-secondary);\n          margin-top: 4px;\n        }\n\n        .toggle {\n          position: relative;\n          display: inline-block;\n          width: 52px;\n          height: 28px;\n        }\n\n        .toggle input {\n          opacity: 0;\n          width: 0;\n          height: 0;\n        }\n\n        .toggle-slider {\n          position: absolute;\n          cursor: pointer;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: var(--button-secondary-bg);\n          transition: .3s;\n          border-radius: 28px;\n        }\n\n        .toggle-slider:before {\n          position: absolute;\n          content: "";\n          height: 20px;\n          width: 20px;\n          left: 4px;\n          bottom: 4px;\n          background-color: var(--text-primary);\n          transition: .3s;\n          border-radius: 50%;\n        }\n\n        input:checked + .toggle-slider {\n          background-color: var(--button-primary-bg);\n        }\n\n        input:checked + .toggle-slider:before {\n          transform: translateX(24px);\n        }\n\n        select {\n          background: var(--input-background);\n          color: var(--text-primary);\n          border: 1px solid var(--border-color);\n          padding: 8px 12px;\n          border-radius: 6px;\n          font-size: var(--font-size-sm);\n          min-width: 120px;\n        }\n\n        .actions {\n          display: flex;\n          justify-content: flex-end;\n          gap: 16px;\n          margin-top: 24px;\n        }\n      </style>\n\n      <div class="settings">\n        <div class="card">\n          <div class="card-title">App Settings</div>\n          \n          <div class="settings-group">\n            <div class="setting-row">\n              <div>\n                <div class="setting-label">Dark Mode</div>\n                <div class="setting-description">Enable dark theme for the application</div>\n              </div>\n              <label class="toggle">\n                <input type="checkbox" id="dark-mode" ${this.settings.darkMode?"checked":""}>\n                <span class="toggle-slider"></span>\n              </label>\n            </div>\n            \n            <div class="setting-row">\n              <div>\n                <div class="setting-label">Notifications</div>\n                <div class="setting-description">Receive notifications about prompt updates</div>\n              </div>\n              <label class="toggle">\n                <input type="checkbox" id="notifications" ${this.settings.notifications?"checked":""}>\n                <span class="toggle-slider"></span>\n              </label>\n            </div>\n            \n            <div class="setting-row">\n              <div>\n                <div class="setting-label">Auto Save</div>\n                <div class="setting-description">Automatically save prompt drafts</div>\n              </div>\n              <label class="toggle">\n                <input type="checkbox" id="auto-save" ${this.settings.autoSave?"checked":""}>\n                <span class="toggle-slider"></span>\n              </label>\n            </div>\n            \n            <div class="setting-row">\n              <div>\n                <div class="setting-label">Font Size</div>\n                <div class="setting-description">Adjust the font size of the prompt editor</div>\n              </div>\n              <select id="font-size">\n                <option value="small" ${"small"===this.settings.fontSize?"selected":""}>Small</option>\n                <option value="medium" ${"medium"===this.settings.fontSize?"selected":""}>Medium</option>\n                <option value="large" ${"large"===this.settings.fontSize?"selected":""}>Large</option>\n              </select>\n            </div>\n          </div>\n          \n          <div class="actions">\n            <button class="btn btn-secondary">Reset to Default</button>\n            <button class="btn btn-primary">Save Settings</button>\n          </div>\n        </div>\n      </div>\n    `,t.injectButtonStyles(this.shadowRoot)}setupEventListeners(){this.shadowRoot.querySelector(".btn-primary").addEventListener("click",(()=>{this.saveSettings()}));this.shadowRoot.querySelector(".btn-secondary").addEventListener("click",(()=>{this.resetSettings()}));const t=this.shadowRoot.querySelector("#dark-mode");t.addEventListener("change",(()=>{this.settings.darkMode=t.checked,this.applySettings()}));const n=this.shadowRoot.querySelector("#font-size");n.addEventListener("change",(()=>{this.settings.fontSize=n.value,this.applySettings()}))}saveSettings(){this.settings.darkMode=this.shadowRoot.querySelector("#dark-mode").checked,this.settings.notifications=this.shadowRoot.querySelector("#notifications").checked,this.settings.autoSave=this.shadowRoot.querySelector("#auto-save").checked,this.settings.fontSize=this.shadowRoot.querySelector("#font-size").value,localStorage.setItem("appSettings",JSON.stringify(this.settings)),this.applySettings(),this.showSaveConfirmation()}resetSettings(){this.settings={darkMode:!0,notifications:!0,autoSave:!0,fontSize:"medium"},localStorage.setItem("appSettings",JSON.stringify(this.settings)),this.applySettings(),this.render(),this.setupEventListeners(),console.log("Settings reset to defaults")}showSaveConfirmation(){const t=this.shadowRoot.querySelector(".btn-primary"),n=t.textContent;t.textContent="Saved!",setTimeout((()=>{t.textContent=n}),2e3)}});class r extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.currentPath=window.location.pathname||"/prompts",this.setupTheme(),this.render(),this.setupEventListeners()}setupTheme(){const t=window.matchMedia("(prefers-color-scheme: dark)").matches;document.documentElement.setAttribute("data-theme",t?"dark":"light");const n=localStorage.getItem("font-size")||"medium";document.documentElement.setAttribute("data-font-size",n),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",(t=>{document.documentElement.setAttribute("data-theme",t.matches?"dark":"light")})),window.addEventListener("font-size-changed",(t=>{const n=t.detail.size;document.documentElement.setAttribute("data-font-size",n),localStorage.setItem("font-size",n)}))}setupEventListeners(){window.addEventListener("route-changed",(t=>{this.currentPath=t.detail.path,this.updateVisibleSection()}))}updateVisibleSection(){let t;switch(this.shadowRoot.querySelectorAll("section").forEach((t=>{t.setAttribute("aria-current","false"),t.style.display="none"})),this.currentPath){case"/prompts":default:t=this.shadowRoot.querySelector("#prompts");break;case"/editor":t=this.shadowRoot.querySelector("#editor");break;case"/analytics":t=this.shadowRoot.querySelector("#analytics");break;case"/testing":t=this.shadowRoot.querySelector("#testing");break;case"/settings":t=this.shadowRoot.querySelector("#settings")}t&&(t.setAttribute("aria-current","page"),t.style.display="block")}render(){this.shadowRoot.innerHTML='\n      <style>\n        :host {\n          display: block;\n          height: 100vh;\n          width: 100%;\n          display: grid;\n          grid-template-rows: var(--header-height) 1fr;\n          background: var(--primary-background);\n          color: var(--text-primary);\n        }\n\n        header {\n          background: var(--secondary-background);\n          padding: 0;\n          position: sticky;\n          top: 0;\n          z-index: var(--z-index-sticky);\n          border-bottom: 1px solid var(--border-color);\n        }\n\n        main {\n          padding: var(--spacing-lg);\n          width: 100%;\n          height: 100%;\n          box-sizing: border-box;\n          overflow: hidden;\n          background: var(--primary-background);\n        }\n\n        section {\n          display: none;\n          height: 100%;\n        }\n\n        section[aria-current="page"] {\n          display: block;\n          height: 100%;\n        }\n\n        h1 {\n          margin: 0 0 var(--spacing-lg) 0;\n          font-size: var(--font-size-xl);\n          font-weight: var(--font-weight-semibold);\n          letter-spacing: -0.01em;\n          color: var(--text-primary);\n        }\n\n        @media (max-width: 767px) {\n          main {\n            padding: var(--spacing-md);\n          }\n\n          h1 {\n            font-size: var(--font-size-lg);\n            margin-bottom: var(--spacing-md);\n          }\n        }\n      </style>\n\n      <header role="banner">\n        <app-navigation></app-navigation>\n      </header>\n\n      <main role="main">\n        <section id="prompts" aria-labelledby="prompts-heading" aria-current="page">\n          <prompt-list></prompt-list>\n        </section>\n\n        <section id="editor" aria-labelledby="editor-heading">\n          <prompt-editor></prompt-editor>\n        </section>\n\n        <section id="analytics" aria-labelledby="analytics-heading">\n          <analytics-dashboard></analytics-dashboard>\n        </section>\n\n        <section id="testing" aria-labelledby="testing-heading">\n          <testing-interface></testing-interface>\n        </section>\n\n        <section id="settings" aria-labelledby="settings-heading">\n          <settings-panel></settings-panel>\n        </section>\n      </main>\n    ',this.updateVisibleSection()}}customElements.define("app-shell",r);
